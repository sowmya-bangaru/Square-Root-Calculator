name: Python CI with SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest

    - name: Run tests and generate JUnit XML report
      run: |
        pytest --maxfail=5 --disable-warnings --junitxml=pytest-report.xml

    - name: Set up SonarQube Scanner
      uses: sonarsource/sonar-scanner-action@v2
      with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}  # Your SonarQube token from GitHub secrets
          sonar-host-url: ${{ secrets.SONAR_HOST_URL }}  # Your SonarQube server URL
          projectBaseDir: .  # Directory containing your code (typically the root of the repository)

    - name: Wait for SonarQube Quality Gate
      uses: sonarsource/sonar-scanner-action@v2
      with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          sonar-host-url: ${{ secrets.SONAR_HOST_URL }}
          projectBaseDir: .
          additionalArgs: >
            -Dsonar.qualitygate.wait=true  # Wait for the quality gate status

    - name: Run SonarQube Analysis
      run: |
          echo "SonarQube Analysis complete."

    # Upload test results as artifact
    - name: Upload test result as artifact
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: pytest-report.xml
