name: Python CI with SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest

    - name: Run tests and generate JUnit XML report
      run: |
        pytest --maxfail=5 --disable-warnings --junitxml=pytest-report.xml

    - name: Cache SonarQube Scanner
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-${{ hashFiles('**/*.py') }}

    - name: SonarQube Scan
      run: |
          curl -sSLo sonarqube-scanner.zip https://binaries.sonarsource.com/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip -q sonarqube-scanner.zip -d $HOME
          $HOME/sonar-scanner-*/bin/sonar-scanner \
            -Dsonar.projectKey=my-project-key \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          if [ $? -ne 0 ]; then exit 1; fi

    # Upload test results as artifact
    - name: Upload test result as artifact
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: pytest-report.xml
